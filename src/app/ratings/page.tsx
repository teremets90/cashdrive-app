"use client";
import { useEffect, useState } from "react";

type Challenge = {
  id: string;
  title: string;
  type: "daily" | "monthly";
  targetTrips: number;
  currentTrips: number;
  isCompleted: boolean;
  progress: number;
  betAmount: number;
};

type Rating = {
  id: string;
  name: string;
  phone: string;
  registeredAt: string;
  totalTrips: number;
  completedChallenges: number;
  activeChallenges: number;
  averageProgress: number;
  totalBetAmount: number;
  score: number;
  position: number;
  challenges: Challenge[];
};

type RatingsData = {
  ratings: Rating[];
  totalParticipants: number;
  activeChallenges: number;
  message?: string;
};

export default function RatingsPage() {
  const [data, setData] = useState<RatingsData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [expandedUser, setExpandedUser] = useState<string | null>(null);

  useEffect(() => {
    loadRatings();
  }, []);

  async function loadRatings() {
    try {
      setLoading(true);
      const res = await fetch("/api/ratings");
      if (!res.ok) {
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥–∏");
      }
      const ratingsData = await res.json();
      setData(ratingsData);
    } catch (e) {
      setError(e instanceof Error ? e.message : "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏");
    } finally {
      setLoading(false);
    }
  }

  function getPositionIcon(position: number) {
    switch (position) {
      case 1: return "ü•á";
      case 2: return "ü•à";
      case 3: return "ü•â";
      default: return `#${position}`;
    }
  }

  function getScoreColor(score: number) {
    if (score >= 500) return "text-green-600";
    if (score >= 300) return "text-blue-600";
    if (score >= 100) return "text-yellow-600";
    return "text-gray-600";
  }

  if (loading) {
    return (
      <div className="min-h-screen bg-gray-50 py-8">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto"></div>
            <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤...</p>
          </div>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen bg-gray-50 py-8">
        <div className="max-w-4xl mx-auto px-4">
          <div className="bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded">
            {error}
          </div>
        </div>
      </div>
    );
  }

  if (!data || data.ratings.length === 0) {
    return (
      <div className="min-h-screen bg-gray-50 py-8">
        <div className="max-w-4xl mx-auto px-4">
          <div className="text-center">
            <h1 className="text-3xl font-bold text-gray-900 mb-4">üèÜ –†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h1>
            <div className="bg-white rounded-lg shadow p-8">
              <p className="text-gray-600 text-lg">
                {data?.message || "–ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ"}
              </p>
            </div>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-4xl mx-auto px-4">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-3xl font-bold text-gray-900 mb-2">üèÜ –†–µ–π—Ç–∏–Ω–≥ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</h1>
          <p className="text-gray-600">
            {data.totalParticipants} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ ‚Ä¢ {data.activeChallenges} –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–µ–π
          </p>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-2xl font-bold text-blue-600">{data.totalParticipants}</div>
            <div className="text-gray-600">–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤</div>
          </div>
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-2xl font-bold text-green-600">{data.activeChallenges}</div>
            <div className="text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–µ–ª–ª–µ–Ω–¥–∂–µ–π</div>
          </div>
          <div className="bg-white rounded-lg shadow p-6 text-center">
            <div className="text-2xl font-bold text-purple-600">
              {Math.round(data.ratings.reduce((sum, r) => sum + r.averageProgress, 0) / data.ratings.length)}%
            </div>
            <div className="text-gray-600">–°—Ä–µ–¥–Ω–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</div>
          </div>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ */}
        <div className="space-y-4">
          {data.ratings.map((rating) => (
            <div key={rating.id} className="bg-white rounded-lg shadow overflow-hidden">
              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="p-6">
                <div className="flex items-center justify-between">
                  <div className="flex items-center space-x-4">
                    <div className="text-2xl font-bold text-gray-400 w-12 text-center">
                      {getPositionIcon(rating.position)}
                    </div>
                    <div>
                      <h3 className="text-lg font-semibold text-gray-900">{rating.name}</h3>
                      <p className="text-sm text-gray-500">–£—á–∞—Å—Ç–Ω–∏–∫ #{rating.id.slice(-4)}</p>
                    </div>
                  </div>
                  <div className="text-right">
                    <div className={`text-2xl font-bold ${getScoreColor(rating.score)}`}>
                      {rating.score} –æ—á–∫–æ–≤
                    </div>
                    <div className="text-sm text-gray-500">
                      {rating.completedChallenges}/{rating.activeChallenges} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ
                    </div>
                  </div>
                </div>

                {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã */}
                <div className="mt-4 space-y-2">
                  <div className="flex justify-between text-sm">
                    <span>–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å</span>
                    <span className="font-medium">{rating.averageProgress}%</span>
                  </div>
                  <div className="w-full bg-gray-200 rounded-full h-2">
                    <div 
                      className="bg-gradient-to-r from-blue-500 to-green-500 h-2 rounded-full transition-all duration-300"
                      style={{ width: `${rating.averageProgress}%` }}
                    ></div>
                  </div>
                </div>

                {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
                <div className="mt-4 grid grid-cols-3 gap-4 text-center">
                  <div>
                    <div className="text-lg font-semibold text-blue-600">{rating.totalTrips}</div>
                    <div className="text-xs text-gray-500">–í—Å–µ–≥–æ –ø–æ–µ–∑–¥–æ–∫</div>
                  </div>
                  <div>
                    <div className="text-lg font-semibold text-green-600">{rating.completedChallenges}</div>
                    <div className="text-xs text-gray-500">–í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>
                  </div>
                  <div>
                    <div className="text-lg font-semibold text-purple-600">{rating.averageProgress}%</div>
                    <div className="text-xs text-gray-500">–ü—Ä–æ–≥—Ä–µ—Å—Å</div>
                  </div>
                </div>
                
                {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞–≤–∫–∞—Ö */}
                {rating.totalBetAmount > 0 && (
                  <div className="mt-3 p-2 bg-yellow-50 rounded border border-yellow-200">
                    <div className="text-sm text-yellow-800 font-medium text-center">
                      üí∞ –û–±—â–∞—è —Å—É–º–º–∞ —Å—Ç–∞–≤–æ–∫: {rating.totalBetAmount} ‚ÇΩ
                    </div>
                  </div>
                )}

                {/* –ö–Ω–æ–ø–∫–∞ —Ä–∞—Å–∫—Ä—ã—Ç–∏—è –¥–µ—Ç–∞–ª–µ–π */}
                <button
                  onClick={() => setExpandedUser(expandedUser === rating.id ? null : rating.id)}
                  className="mt-4 w-full text-center text-blue-600 hover:text-blue-800 transition-colors"
                >
                  {expandedUser === rating.id ? "–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏" : "–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏"}
                </button>
              </div>

              {/* –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              {expandedUser === rating.id && (
                <div className="border-t bg-gray-50 p-6">
                  <h4 className="font-semibold text-gray-900 mb-4">–î–µ—Ç–∞–ª–∏ –ø–æ —á–µ–ª–ª–µ–Ω–¥–∂–∞–º:</h4>
                  <div className="space-y-3">
                    {rating.challenges.map((challenge) => (
                      <div key={challenge.id} className="bg-white rounded p-3">
                        <div className="flex justify-between items-center mb-2">
                          <div>
                            <div className="font-medium text-gray-900">{challenge.title}</div>
                            <div className="text-sm text-gray-500">
                              {challenge.type === "daily" ? "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π" : "–ú–µ—Å—è—á–Ω—ã–π"}
                            </div>
                          </div>
                          <div className="text-right">
                            <div className="font-semibold text-gray-900">
                              {challenge.currentTrips}/{challenge.targetTrips}
                            </div>
                            <div className="text-sm text-gray-500">
                              {challenge.isCompleted ? "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ" : `${challenge.progress}%`}
                            </div>
                            {challenge.betAmount > 0 && (
                              <div className="text-xs text-yellow-600 font-medium">
                                üí∞ {challenge.betAmount} ‚ÇΩ
                              </div>
                            )}
                          </div>
                        </div>
                        <div className="w-full bg-gray-200 rounded-full h-2">
                          <div 
                            className={`h-2 rounded-full transition-all duration-300 ${
                              challenge.isCompleted 
                                ? 'bg-green-500' 
                                : challenge.progress > 50 
                                ? 'bg-yellow-500' 
                                : 'bg-blue-500'
                            }`}
                            style={{ width: `${challenge.progress}%` }}
                          ></div>
                        </div>
                      </div>
                    ))}
                  </div>
                </div>
              )}
            </div>
          ))}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ –æ—á–∫–æ–≤ */}
        <div className="mt-8 bg-white rounded-lg shadow p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-3">üìä –°–∏—Å—Ç–µ–º–∞ –æ—á–∫–æ–≤</h3>
          <div className="grid grid-cols-1 md:grid-cols-4 gap-4 text-sm">
            <div>
              <div className="font-medium text-green-600">–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —á–µ–ª–ª–µ–Ω–¥–∂</div>
              <div className="text-gray-600">+100 –æ—á–∫–æ–≤</div>
            </div>
            <div>
              <div className="font-medium text-blue-600">–ü—Ä–æ–≥—Ä–µ—Å—Å</div>
              <div className="text-gray-600">+50 –æ—á–∫–æ–≤ –∑–∞ 100%</div>
            </div>
            <div>
              <div className="font-medium text-purple-600">–ü–æ–µ–∑–¥–∫–∏</div>
              <div className="text-gray-600">+1 –æ—á–∫–æ –∑–∞ –ø–æ–µ–∑–¥–∫—É</div>
            </div>
            <div>
              <div className="font-medium text-yellow-600">–°—Ç–∞–≤–∫–∏</div>
              <div className="text-gray-600">+0.1 –æ—á–∫–∞ –∑–∞ 1 ‚ÇΩ</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
